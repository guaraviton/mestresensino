package br.com.mestres.ensino.webapp.spring.persistence.model;

// Generated 05/08/2014 23:00:01 by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.SortComparator;

import br.com.mestres.ensino.webapp.spring.config.json.serializer.CustomDateSerializer;
import br.com.mestres.ensino.webapp.spring.util.comparator.AlunoAulaComparator;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

/**
 * Aula generated by hbm2java
 */
@Entity
@Table(name = "aula", catalog = "mestresensino")
public class Aula implements java.io.Serializable {

	private Integer id;
	private Sala sala;
	private Professor professor;
	
	@JsonSerialize(using = CustomDateSerializer.class)
	private Date data;
	private String horario;
	private Integer horas;
	
	@JsonIgnore
	private Set<AlunoAula> alunoAulas = new HashSet<AlunoAula>(0);

	public Aula() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "sala_id", nullable = false)
	public Sala getSala() {
		return this.sala;
	}

	public void setSala(Sala sala) {
		this.sala = sala;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "professor_id", nullable = false)
	public Professor getProfessor() {
		return this.professor;
	}

	public void setProfessor(Professor professor) {
		this.professor = professor;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "aula", orphanRemoval = true, cascade = {CascadeType.ALL})
	public Set<AlunoAula> getAlunoAulas() {
		return this.alunoAulas;
	}

	public void setAlunoAulas(Set<AlunoAula> alunoAulas) {
		this.alunoAulas = alunoAulas;
	}

	@Column(name = "data_aula", nullable = false)
	public Date getData() {
		return data;
	}

	public void setData(Date data) {
		this.data = data;
	}

	@Column(name = "horario", nullable = false)
	public String getHorario() {
		return horario;
	}

	public void setHorario(String horario) {
		this.horario = horario;
	}

	@Column(name = "horas", nullable = false)
	public Integer getHoras() {
		return horas;
	}

	public void setHoras(Integer horas) {
		this.horas = horas;
	}
}
